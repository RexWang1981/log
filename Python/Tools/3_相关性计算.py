import numpy as np
def pearson_correlation(x, y):
	n = len(x)
	if n != len(y):
		raise ValueError("The lists x and y must have the same length.")

	mean_x = np.mean(x)
	mean_y = np.mean(y)

	numerator = sum((x[i] - mean_x) * (y[i] - mean_y) for i in range(n))
	denominator = np.sqrt(sum((x[i] - mean_x) ** 2 for i in range(n)) * sum((y[i] - mean_y) ** 2 for i in range(n)))

	if denominator == 0:
		return 0

	return numerator / denominator


# 示例数据
#Torque
# x = [6.6497,6.5968,6.591,6.5895,6.569,6.5317,6.517,6.5103,6.4905,6.464,6.464,6.463,6.4504,6.4403,6.433,6.422,6.4203,6.4178,6.412,6.3872,6.3817,6.3736,6.3694,6.337,6.3268,6.311,6.2888,6.2586,6.2563,6.243,6.2315,6.227,6.226,6.2116,6.146,6.1456]

#Amps
#x = [0.31,0.3114,0.3148,0.315,0.3168,0.3146,0.3153,0.3152,0.3139,0.3139,0.3144,0.3158,0.3142,0.314,0.3155,0.3164,0.3142,0.3127,0.3162,0.3154,0.313,0.3144,0.3125,0.315,0.3148,0.313,0.3161,0.3147,0.3114,0.3159,0.3112,0.3131,0.3094,0.3139,0.3149,0.3116]

# Watts-In
#x = [36.604,36.806,37.2822,37.3555,37.578,37.333,37.3994,37.3342,37.184,37.1722,37.2612,37.2974,37.1734,37.2057,37.404,37.5468,37.22,36.996,37.495,37.3686,37.063,37.2206,36.912,37.3487,37.2298,36.9296,37.4387,37.27,36.7855,37.4534,36.7887,37.1,36.5419,37.1813,37.2978,36.801]

#Motor Efficiency  @ 3300rpm-Hi
x = [42.28,40.75,43.142,42.22,42.66,42.6,40.1,41.948,42.15,41.284,42.332,41.678,42.342,42.0317,41.97,41.734,42.555,42.3475,41.73,41.708,42.016,41.79,43.1833,41.4029,43.242,41.7,42.9525,40.978,41.34,40.562,43.1867,40.96,41.4757,43.64,42.135,41.954]

# impedance
#y = [19.04999924,18.79000092,18.40999985,18.82999992,18.55999947,18.34000015,18.80999947,18.79000092,18.88999939,18.82999992,18.44000053,18.46999931,18.52000046,18.95000076,18.56999969,18.56999969,18.70000076,19.01000023,18.57999992,18.53000069,18.73999977,18.48999977,18.82999992,18.72999954,18.93000031,18.59000015,18.37999916,18.77000046,18.85000038,18.65999985,18.89999962,18.75,19.02000046,18.70000076,18.84000015,18.52000046]

#Resistance
#y = [12.39999962,12.25,11.98999977,12.22000027,12.05000019,11.96000004,12.17000008,12.25,12.35000038,12.22000027,11.90999985,11.94999981,12.06999969,12.27000046,12.14999962,12.11999989,12.21000004,12.35000038,12.15999985,12.05000019,12.17000008,12.02999973,12.19999981,12.14999962,12.26000023,12.06999969,11.93000031,12.15999985,12.28999996,12.19999981,12.30000019,12.14999962,12.36999989,12.22000027,12.26000023,11.97999954]

#Reactance
#y = [14.46000004,14.25,13.97000027,14.32999992,14.11999989,13.89999962,14.35000038,14.25,14.28999996,14.32999992,14.07999992,14.07999992,14.03999996,14.43999958,14.05000019,14.06999969,14.15999985,14.44999981,14.06000042,14.07999992,14.23999977,14.02999973,14.34000015,14.26000023,14.43000031,14.13000011,13.97999954,14.28999996,14.28999996,14.13000011,14.35000038,14.27999973,14.43999958,14.14999962,14.31000042,14.11999989]

#Overall value
#y = [3220,3250,3230,3170,3170,3320,3140,3250,3250,3150,3200,3280,3260,3160,3250,3230,3260,3120,3210,3280,3160,3300,3180,3150,3170,3210,3290,3160,3230,3280,3150,3160,3120,3300,3230,3200]

#symmetry
#y = [961,947,964,959,962,961,953,947,950,959,961,952,964,961,963,955,968,961,963,956,964,963,965,957,960,957,945,965,964,963,964,962,958,956,957,955]

#gradient
#y = [10,9,8,11,9,8,8,9,7,12,9,8,9,9,9,9,8,9,8,9,8,9,8,7,10,9,10,9,10,11,7,10,10,10,8,10]

# delta (wave top -wave bottom)
#y = [1200,910,880,990,860,620,1170,910,940,800,750,1140,840,980,730,920,680,770,800,1110,920,690,660,960,700,820,1150,970,920,870,730,1020,880,700,1330,800]

# maximumamplitude mV
#y = [5290,5100,5160,5010,5060,5080,5150,5100,5070,4920,4970,5200,5080,5030,5040,5080,5040,4900,5030,5170,4980,5040,4930,5020,4910,4970,5230,5000,5050,5110,4910,5080,4920,5050,5180,5010]

#minimum amplitude_mV
y = [4090,4190,4280,4020,4200,4460,3980,4190,4130,4120,4220,4060,4240,4050,4310,4160,4360,4130,4230,4060,4060,4350,4270,4060,4210,4150,4080,4030,4130,4240,4180,4060,4040,4350,3850,4210]

# 计算皮尔逊相关系数
r = pearson_correlation(x, y)
print(f"皮尔逊相关数: {r}")